// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScannerCC.Models;

#nullable disable

namespace ScannerCC.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231103210823_deleteImagenProducto")]
    partial class deleteImagenProducto
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ScannerCC.Models.Escaneo", b =>
                {
                    b.Property<string>("IdEscaneo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("EscaneoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Hora")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("IdEscaneo");

                    b.HasIndex("ProductoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Escaneo");
                });

            modelBuilder.Entity("ScannerCC.Models.Producto", b =>
                {
                    b.Property<int>("idProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idProducto"));

                    b.Property<float>("AlturaBotella")
                        .HasColumnType("real");

                    b.Property<float>("AnchoBotella")
                        .HasColumnType("real");

                    b.Property<float?>("Azucar")
                        .HasColumnType("real");

                    b.Property<int?>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Cepa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodigoBarra")
                        .HasColumnType("int");

                    b.Property<string>("ColorBotella")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorCapsula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Densidad")
                        .HasColumnType("real");

                    b.Property<DateTime?>("FechaCosecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaProduccion")
                        .HasColumnType("datetime2");

                    b.Property<float?>("GradoAlcohol")
                        .HasColumnType("real");

                    b.Property<bool?>("Medalla")
                        .HasColumnType("bit");

                    b.Property<float>("MedidaEtiquetaABase")
                        .HasColumnType("real");

                    b.Property<float>("MedidadEtiquetaABoquete")
                        .HasColumnType("real");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaisDestino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaisOrigen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Sulfuroso")
                        .HasColumnType("real");

                    b.Property<string>("TipoBotella")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoCapsula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoCorcho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoEtiqueta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idProducto");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("ScannerCC.Models.Rol", b =>
                {
                    b.Property<int>("idRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idRol"));

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idRol");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("ScannerCC.Models.Usuario", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idUsuario"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("Rut")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idUsuario");

                    b.HasIndex("RolId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("ScannerCC.Models.UsuarioProducto", b =>
                {
                    b.Property<string>("IdUsuarioProducto")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Hora")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("IdUsuarioProducto");

                    b.HasIndex("ProductoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioProducto");
                });

            modelBuilder.Entity("ScannerCC.Models.Escaneo", b =>
                {
                    b.HasOne("ScannerCC.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScannerCC.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ScannerCC.Models.Usuario", b =>
                {
                    b.HasOne("ScannerCC.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("ScannerCC.Models.UsuarioProducto", b =>
                {
                    b.HasOne("ScannerCC.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScannerCC.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
